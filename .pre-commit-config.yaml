# ===========================================
# PRE-COMMIT HOOKS - EVAonline
# ===========================================
# Configuração de hooks para manter qualidade e consistência do código
# Instalação: pip install pre-commit && pre-commit install
# Execução manual: pre-commit run --all-files

default_language_version:
  python: python3.10

repos:
  # ===========================================
  # Formatação de Código Python
  # ===========================================
  - repo: https://github.com/psf/black
    rev: 24.1.1
    hooks:
      - id: black
        language_version: python3.10
        args: ["--line-length=100"]
        exclude: |
          (?x)^(
              docs/archive/.*|
              .venv/.*|
              venv/.*|
              migrations/.*|
              alembic/versions/.*
          )$

  # ===========================================
  # Organização de Imports
  # ===========================================
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black", "--line-length", "100"]
        exclude: |
          (?x)^(
              docs/archive/.*|
              .venv/.*|
              venv/.*|
              migrations/.*|
              alembic/versions/.*
          )$

  # ===========================================
  # Linting Python
  # ===========================================
  - repo: https://github.com/PyCQA/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args:
          [
            "--max-line-length=100",
            "--extend-ignore=E203,E266,E501,W503,F403,F401",
            "--max-complexity=18",
            "--select=B,C,E,F,W,T4,B9",
          ]
        additional_dependencies:
          ["flake8-bugbear", "flake8-comprehensions", "flake8-simplify"]
        exclude: |
          (?x)^(
              docs/archive/.*|
              .venv/.*|
              venv/.*|
              migrations/.*|
              alembic/versions/.*|
              __pycache__/.*|
              .*/__pycache__/.*
          )$

  # ===========================================
  # Type Checking (Mypy)
  # ===========================================
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args:
          [
            "--ignore-missing-imports",
            "--disallow-untyped-defs",
            "--disallow-incomplete-defs",
            "--check-untyped-defs",
            "--no-implicit-optional",
            "--warn-redundant-casts",
            "--warn-unused-ignores",
            "--warn-return-any",
            "--strict-optional",
          ]
        additional_dependencies:
          [
            "types-requests",
            "types-redis",
            "types-pytz",
            "types-python-dateutil",
            "pydantic>=2.0.0",
          ]
        exclude: |
          (?x)^(
              docs/archive/.*|
              .venv/.*|
              venv/.*|
              migrations/.*|
              alembic/versions/.*|
              tests/.*|
              scripts/.*
          )$

  # ===========================================
  # Segurança - Detectar Secrets
  # ===========================================
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ["--baseline", ".secrets.baseline"]
        exclude: |
          (?x)^(
              .*\.lock$|
              .*\.yarn/.*|
              node_modules/.*|
              .venv/.*|
              venv/.*
          )$

  # ===========================================
  # Hooks Genéricos
  # ===========================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: |
          (?x)^(
              .*\.md$|
              docs/.*
          )$
      - id: end-of-file-fixer
        exclude: |
          (?x)^(
              .*\.md$|
              docs/.*
          )$
      - id: check-yaml
        args: ["--unsafe"]
      - id: check-json
      - id: check-toml
      - id: check-added-large-files
        args: ["--maxkb=1000"]
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-docstring-first
      - id: debug-statements
      - id: mixed-line-ending
        args: ["--fix=lf"]
      - id: requirements-txt-fixer

  # ===========================================
  # Docker
  # ===========================================
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ["--ignore", "DL3008", "--ignore", "DL3013"]

  # ===========================================
  # YAML Linting
  # ===========================================
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        args: ["-d", "{extends: default, rules: {line-length: {max: 120}}}"]
        exclude: |
          (?x)^(
              docker-compose.*\.yml$|
              .github/workflows/.*
          )$

# ===========================================
# Configuração CI
# ===========================================
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks
  autofix_prs: true
  autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
  autoupdate_schedule: weekly
  skip: []
  submodules: false
